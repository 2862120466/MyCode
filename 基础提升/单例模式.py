'''
单例模式的作用：防止客户端创建多个对象，造成内存浪费或多个对象之间的信息不匹配带来误解

单例模式特点：
1）单例类只能有一个实例
2）单例类必须自己创建自己的唯一实例
3）单例类必须给所有其他对象提供这一实例

实现单例模式的集中方法：
一）Python 的模块就是天然的单例模式，因为模块在第一次导入时，会生成 .pyc 文件，
当第二次导入时，就会直接加载 .pyc 文件，而不会再次执行模块代码。
因此，我们只需把相关的函数和数据定义在一个模块中，就可以获得一个单例对象了。

二）静态变量方法
先执行了类的__new__方法（当不重写这个方法时，默认调用object.__new__），实例化对象；
然后再执行类的__init__方法，对这个对象进行初始化，所有我们可以基于这个，实现单例模式。
__new__会在创建对象时被调用。__init__在创建对象后被调用

三）装饰器实现
原理同上，同样是在创建对象是进行一次对实例的判定

'''


'''
利用python模块实现单例
'''

