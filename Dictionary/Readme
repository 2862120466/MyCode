 映射：映射让你能够使用任何不可变的对象（常用的是字符串和元组）来标识其
   元素。 Python只有一种内置的映射类型，那就是字典。
 将字符串格式设置功能用于字典：要对字典执行字符串格式设置操作，不能使用
   format 和命名参数，而必须使用format_map。
 字典方法：字典有很多方法，这些方法的调用方式与列表和字符串的方法相同。

函  数                   描  述
dict(seq)             从键值对、映射或关键字参数创建字典
clear()               方法clear删除所有的字典项，这种操作是就地执行的（就像list.sort一样），因此什么都不 返回（或者说返回None）。
copy()                方法copy返回一个新字典，其包含的键值对与原来的字典相同（这个方法执行的是浅复制， 因为值本身是原件，而非副本）。
fromkeys()            方法fromkeys创建一个新字典，其中包含指定的键，且每个键对应的值都是None。
get()                 方法get为访问字典项提供了宽松的环境。通常，如果你试图访问字典中没有的项，将引发错误。
items()               方法items返回一个包含所有字典项的列表，其中每个元素都为(key, value)的形式。字典项 在列表中的排列顺序不确定。
keys()                方法keys返回一个字典视图，其中包含指定字典中的键。
pop()                 方法pop可用于获取与指定键相关联的值，并将该键值对从字典中删除。
popitem()             方法popitem类似于list.pop，但list.pop弹出列表中的后一个元素，而popitem随机地弹出一个字典项，因为字典项的顺序是不确定的，没有“后一个元素”的概念。如果你要以高效 地方式逐个删除并处理所有字典项，这可能很有用，因为这样无需先获取键列表。
setdefault()          方法setdefault有点像get，因为它也获取与指定键相关联的值，但除此之外，setdefault 还在字典不包含指定的键时，在字典中添加指定的键值对。
update()              方法update使用一个字典中的项来更新另一个字典。
values()              方法values返回一个由字典中的值组成的字典视图。不同于方法keys，方法values返回的视 图可能包含重复的值

